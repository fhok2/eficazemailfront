.env
.eslintrc.json
.gitignore
> fallback-build-manifest.json
> package.json
> react-loadable-manifest.json
> server/
> > app/
> > > dashboard/
> > > > page.js
> > > login/
> > > > page.js
> > > novasenha/
> > > > page.js
> > > page.js
> > app-paths-manifest.json
> > client-reference-manifest.js
> > client-reference-manifest.json
> > flight-server-css-manifest.js
> > flight-server-css-manifest.json
> > middleware-build-manifest.js
> > middleware-manifest.json
> > middleware-react-loadable-manifest.js
> > next-font-manifest.js
> > next-font-manifest.json
> > pages/
> > > _app.js
> > > _document.js
> > > _error.js
> > pages-manifest.json
> > server-reference-manifest.js
> > server-reference-manifest.json
> > webpack-runtime.js
> > _error.js
> static/
> > chunks/
> > > amp.js
> > > app/
> > > > dashboard/
> > > > > page.js
> > > > layout.js
> > > > login/
> > > > > page.js
> > > > novasenha/
> > > > > page.js
> > > > page.js
> > > app-client-internals.js
> > > fallback/
> > > > amp.js
> > > > main.js
> > > > pages/
> > > > > _app.js
> > > > > _error.js
> > > > react-refresh.js
> > > > webpack.js
> > > main-app.js
> > > main.js
> > > pages/
> > > > _app.js
> > > > _error.js
> > > polyfills.js
> > > react-refresh.js
> > > webpack.js
> > > _error.js
> > css/
> > > app/
> > > > layout.css
> > development/
> > > _buildManifest.js
> > > _ssgManifest.js
> > media/
> > > 05a31a2ca4975f99-s.woff2
> > > 513657b02c5c193f-s.woff2
> > > 51ed15f9841b9f9d-s.woff2
> > > c9a5bc6a7c948fb0-s.p.woff2
> > > d6b16ce4a6175f26-s.woff2
> > > ec159349637c90ad-s.woff2
> > > fd4db3eb5472fc27-s.woff2
> > webpack/
> > > 042eff35e3e23d57.webpack.hot-update.json
> > > 0c14d8de99090d40.webpack.hot-update.json
> > > 0d0ab706fb190448.webpack.hot-update.json
> > > 0fc1dfc6f71ca6b6.webpack.hot-update.json
> > > 1bd972ba171ec443.webpack.hot-update.json
> > > 3012818dc81d9011.webpack.hot-update.json
> > > 409757a347db6f72.webpack.hot-update.json
> > > 415157c9dcde035c.webpack.hot-update.json
> > > 41a80401bae5ccde.webpack.hot-update.json
> > > 4ca74fb379b695d1.webpack.hot-update.json
> > > 555c1f9640b50284.webpack.hot-update.json
> > > 66e5603658cd4470.webpack.hot-update.json
> > > 8e75f35d3f172680.webpack.hot-update.json
> > > 97e6677782bfeac1.webpack.hot-update.json
> > > amp.0d0ab706fb190448.hot-update.js
> > > amp.1bd972ba171ec443.hot-update.js
> > > amp.409757a347db6f72.hot-update.js
> > > amp.555c1f9640b50284.hot-update.js
> > > amp.d2210f3b2c6074c5.hot-update.js
> > > app/
> > > > layout.042eff35e3e23d57.hot-update.js
> > > > layout.0c14d8de99090d40.hot-update.js
> > > > layout.0fc1dfc6f71ca6b6.hot-update.js
> > > > layout.3012818dc81d9011.hot-update.js
> > > > layout.41a80401bae5ccde.hot-update.js
> > > > layout.4ca74fb379b695d1.hot-update.js
> > > > layout.66e5603658cd4470.hot-update.js
> > > > layout.97e6677782bfeac1.hot-update.js
> > > > layout.b3bf3f67217a1b2e.hot-update.js
> > > > layout.b9cdc2a2c0ebc685.hot-update.js
> > > > layout.d0d61187e0c66b03.hot-update.js
> > > > layout.d89415c68830d42f.hot-update.js
> > > > layout.da37c6c93cbd76c6.hot-update.js
> > > > layout.db0f75d6e2e7de23.hot-update.js
> > > > layout.dff1d7ffb27d9604.hot-update.js
> > > > layout.e559567f7a5658b3.hot-update.js
> > > > layout.e57ce9af490229bc.hot-update.js
> > > > layout.eb5523336eddcc8f.hot-update.js
> > > > layout.f26523f778acfb18.hot-update.js
> > > > layout.f3e0f04be6cff3d2.hot-update.js
> > > > layout.f92dfe184f8b5e16.hot-update.js
> > > > login/
> > > > > page.41a80401bae5ccde.hot-update.js
> > > b3bf3f67217a1b2e.webpack.hot-update.json
> > > b9cdc2a2c0ebc685.webpack.hot-update.json
> > > b9d084c6aa2a5ee6.webpack.hot-update.json
> > > d0d61187e0c66b03.webpack.hot-update.json
> > > d2210f3b2c6074c5.webpack.hot-update.json
> > > d2702340fc47c54f.webpack.hot-update.json
> > > d89415c68830d42f.webpack.hot-update.json
> > > da37c6c93cbd76c6.webpack.hot-update.json
> > > db0f75d6e2e7de23.webpack.hot-update.json
> > > dff1d7ffb27d9604.webpack.hot-update.json
> > > e559567f7a5658b3.webpack.hot-update.json
> > > e57ce9af490229bc.webpack.hot-update.json
> > > eb5523336eddcc8f.webpack.hot-update.json
> > > f26523f778acfb18.webpack.hot-update.json
> > > f3e0f04be6cff3d2.webpack.hot-update.json
> > > f729a3c832127063.webpack.hot-update.json
> > > f92dfe184f8b5e16.webpack.hot-update.json
> > > main.0d0ab706fb190448.hot-update.js
> > > main.1bd972ba171ec443.hot-update.js
> > > main.409757a347db6f72.hot-update.js
> > > main.555c1f9640b50284.hot-update.js
> > > main.d2210f3b2c6074c5.hot-update.js
> > > webpack.042eff35e3e23d57.hot-update.js
> > > webpack.0c14d8de99090d40.hot-update.js
> > > webpack.0d0ab706fb190448.hot-update.js
> > > webpack.0fc1dfc6f71ca6b6.hot-update.js
> > > webpack.1bd972ba171ec443.hot-update.js
> > > webpack.3012818dc81d9011.hot-update.js
> > > webpack.409757a347db6f72.hot-update.js
> > > webpack.415157c9dcde035c.hot-update.js
> > > webpack.41a80401bae5ccde.hot-update.js
> > > webpack.4ca74fb379b695d1.hot-update.js
> > > webpack.555c1f9640b50284.hot-update.js
> > > webpack.66e5603658cd4470.hot-update.js
> > > webpack.8e75f35d3f172680.hot-update.js
> > > webpack.97e6677782bfeac1.hot-update.js
> > > webpack.b3bf3f67217a1b2e.hot-update.js
> > > webpack.b9cdc2a2c0ebc685.hot-update.js
> > > webpack.b9d084c6aa2a5ee6.hot-update.js
> > > webpack.d0d61187e0c66b03.hot-update.js
> > > webpack.d2210f3b2c6074c5.hot-update.js
> > > webpack.d2702340fc47c54f.hot-update.js
> > > webpack.d89415c68830d42f.hot-update.js
> > > webpack.da37c6c93cbd76c6.hot-update.js
> > > webpack.db0f75d6e2e7de23.hot-update.js
> > > webpack.dff1d7ffb27d9604.hot-update.js
> > > webpack.e559567f7a5658b3.hot-update.js
> > > webpack.e57ce9af490229bc.hot-update.js
> > > webpack.eb5523336eddcc8f.hot-update.js
> > > webpack.f26523f778acfb18.hot-update.js
> > > webpack.f3e0f04be6cff3d2.hot-update.js
> > > webpack.f729a3c832127063.hot-update.js
> > > webpack.f92dfe184f8b5e16.hot-update.js
> trace
> types/
> > app/
> > > dashboard/
> > > > page.ts
> > > layout.ts
> > > login/
> > > > page.ts
> > > novasenha/
> > > > page.ts
> > > page.ts
> > package.json
Dockerfile
jsconfig.json
next.config.js
node_modules/
package-lock.json
package.json
postcss.config.js
public/
> next.svg
> vercel.svg
README.md
server.js
src/
> app/
> > api/
> > > auth/
> > > > [...nextauth].js
> > dashboard/
> > > pag1.js
> > > page.js
> > globals.css
> > layout.js
> > login/
> > > page.js
> > novasenha/
> > > page.js
> > page.js
> > payment/
> > > page.js
> components/
> > Button.js
> > Contact.js
> > EmailAliasCard.js
> > EmailForwardingForm.js
> > FAQ.js
> > Footer.js
> > Form.js
> > GlassmorphismButton.js
> > Header.js
> > Hero.js
> > HowItWorks.js
> > Input.js
> > Layout.js
> > MainContent.js
> > MobileMenu.js
> > Plans.js
> > Sidebar.js
> > userDashboard.js
> > UserTable.js
> pages/
> > api/
> > > webhook.js
tailwind.config.js

```js next.config.js
/** @type {import('next').NextConfig} */
const nextConfig = {}


module.exports = nextConfig

```
```js postcss.config.js
module.exports = {
  plugins: {
    tailwindcss: {},
    autoprefixer: {},
  },
}

```
```js server.js
'use client';
import { useEffect, useState } from 'react';
import io from 'socket.io-client';
import axios from 'axios';

// const SOCKET_SERVER_URL = 'https://emailpix.up.railway.app';
const SOCKET_SERVER_URL = 'http://localhost:3005';

export default function Home() {
  const [paymentStatus, setPaymentStatus] = useState(null);
  const transactionID = 'fefccd91c7714c598c497dcf303f87f4';

  useEffect(() => {
    const connectWebSocket = async () => {
      try {
        // Obter o token CSRF (com o cookie)
        const csrfResponse = await axios.get(`${SOCKET_SERVER_URL}/api/csrf/get-csrf-token`, { withCredentials: true });
        const csrfToken = csrfResponse.data.csrfToken;
        axios.defaults.headers.common['X-CSRF-Token'] = csrfToken;

        // Iniciar a sessão de pagamento (enviando o token CSRF)
        const response = await axios.post(`${SOCKET_SERVER_URL}/api/payments/startPayment`, { transactionID }, { withCredentials: true });
        const { tempToken } = response.data;

        // Conectar ao WebSocket com o token temporário
        const socket = io(SOCKET_SERVER_URL, {
          transports: ['polling', 'websocket'], // Adicionando polling para compatibilidade
          auth: {
            token: tempToken
          }
        });

        socket.on('connect_error', (error) => {
          console.error('Erro de conexão WebSocket:', error);
        });

        socket.on('connect', () => {
          console.log('Conectado ao WebSocket:', socket.id);
        });

        socket.on('paymentStatus', (data) => {
          console.log('Pagamento atualizado:', data);
          setPaymentStatus(data);
        });

        return () => {
          socket.disconnect();
        };
      } catch (error) {
        console.error('Erro ao iniciar a sessão de pagamento ou conectar ao WebSocket:', error);
      }
    };

    connectWebSocket();
  }, [])
```
```js src\app\api\auth\[...nextauth].js
// app/api/auth/[...nextauth].js
import NextAuth from "next-auth";
import CredentialsProvider from "next-auth/providers/credentials";

export const authOptions = {
  providers: [
    CredentialsProvider({
      // Configure suas credenciais aqui (email e senha, por exemplo)
      async authorize(credentials, req) {
        // Lógica para verificar as credenciais do usuário no seu banco de dados
      },
    }),
  ],
  // Outras opções de configuração do NextAuth
};

export default NextAuth(authOptions);

```
```js src\app\dashboard\pag1.js
"use client";
import { useEffect, useState } from "react";
import io from "socket.io-client";
import axios from "axios";
import Sidebar from "@/components/Sidebar";
import Header from "@/components/Header";
import UserTable from "@/components/UserTable";
import MainContent from "@/components/MainContent";
import React from 'react';
import EmailAliasCard from '@/components/EmailAliasCard'; // Correção do caminho
import { getServerSession } from 'next-auth';
import { authOptions } from '../api/auth/[...nextauth]/route';
import { redirect } from 'next/navigation';

const SOCKET_SERVER_URL = "https://emailpix.up.railway.app";
// const SOCKET_SERVER_URL = 'http://localhost:3005';

export default function Home() {
  const [paymentStatus, setPaymentStatus] = useState(null);
  const transactionID = "fefccd91c7714c598c497dcf303f87f4";

  useEffect(() => {
    const connectWebSocket = async () => {
      try {
        // Obter o token CSRF (com o cookie)
        const csrfResponse = await axios.get(
          `${SOCKET_SERVER_URL}/api/csrf/get-csrf-token`,
          { withCredentials: true }
        );
        const csrfToken = csrfResponse.data.csrfToken;
        axios.defaults.headers.common["X-CSRF-Token"] = csrfToken;

        // Iniciar a sessão de pagamento (enviando o token CSRF)
        const response = await axios.post(
          `${SOCKET_SERVER_URL}/api/payments/startPayment`,
          { transactionID },
          { withCredentials: true }
        );
        const { tempToken } = response.data;

        // Conectar ao WebSocket com o token temporário
        const socket = io(SOCKET_SERVER_URL, {
          transports: ["polling", "websocket"], // Adicionando polling para compatibilidade
          auth: {
            token: tempToken,
          },
        });

        socket.on("connect_error", (error) => {
          console.error("Erro de conexão WebSocket:", error);
        });

        socket.on("connect", () => {
          console.log("Conectado ao WebSocket:", socket.id);
        });

        socket.on("paymentStatus", (data) => {
          console.log("Pagamento atualizado:", data);
          setPaymentStatus(data);
        });

        return () => {
          socket.disconnect();
        };
      } catch (error) {
        console.error(
          "Erro ao iniciar a sessão de pagamento ou conectar ao WebSocket:",
          error
        );
      }
    };

    connectWebSocket();
  }, []);
  const [isSidebarOpen, setSidebarOpen] = useState(false);

  const toggleSidebar = () => {
    setSidebarOpen(!isSidebarOpen);
  };

  return (
    <div className="flex flex-col min-h-screen">
      <div className="flex flex-col min-h-screen">
      <Header toggleSidebar={toggleSidebar} />
      <div className="flex flex-1">
      <Sidebar isOpen={isSidebarOpen} toggleSidebar={toggleSidebar} />
        <MainContent />
      </div>
    </div>
    </div>
  );
}

```
```js src\app\dashboard\page.js
import React from 'react';
import EmailAliasCard from '@/components/EmailAliasCard'; // Correção do caminho
import { getServerSession } from "next-auth/next"; // Correção da importação
import { authOptions } from '../api/auth/[...nextauth]'; 
import { redirect } from 'next/navigation';

const Dashboard = async () => {
  const session = await getServerSession(authOptions);

  if (!session) {
    redirect('/login');
  }

  const userEmail = session?.user?.email;
  const user = await prisma.user.findUnique({
    where: {
      email: userEmail,
    },
    include: {
      createdEmails: true,
    },
  });
  
  const emailAliases = user ? user.createdEmails : [];

  return (
    <div className="container mx-auto py-12">
      <h1 className="text-3xl font-bold text-center text-secondary mb-8">Seus Aliases de E-mail</h1>

      {emailAliases.length > 0 ? (
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
          {emailAliases.map((alias) => (
            <EmailAliasCard key={alias.id} alias={alias} />
          ))}
        </div>
      ) : (
        <p className="text-center text-gray-500">Você ainda não criou nenhum alias de e-mail.</p>
      )}

      {/* Botão para criar novo alias (opcional) */}
      <div className="text-center mt-8">
        <button className="bg-accent text-secondary font-bold py-2 px-4 rounded">
          Criar Novo Alias
        </button>
      </div>
    </div>
  );
};

export default Dashboard;

```
```js src\app\layout.js
import './globals.css'
import { Inter } from 'next/font/google'

const inter = Inter({ subsets: ['latin'] })

export const metadata = {
  title: 'Taxas Reduzidas - Economize em suas Transações',
  description: 'Aproveite as taxas reduzidas no PagSeguro e economize em cada transação. Oferecemos soluções de pagamento com tarifas competitivas, proporcionando mais lucro para o seu negócio.',
}

export default function RootLayout({ children }) {
  return (
    <html lang="pt-br">
      <head>
        <meta name="description" content={metadata.description} />
        <title>{metadata.title}</title>
      </head>
      <body className={inter.className}>

        {children}
      </body>
    </html>
  )
}

```
```js src\app\login\page.js
'use client'; // This is a client component
import { useState } from 'react';
import { signIn } from 'next-auth/react';
import { useRouter } from 'next/navigation';
import Input from '@/components/Input';
import Button from '@/components/Button';

const LoginPage = () => {
  const [email, setEmail] = useState('');
  const [error, setError] = useState(null);
  const router = useRouter();

  const handleSubmit = async (event) => {
    event.preventDefault();
    setError(null); // Limpa qualquer erro anterior

    try {
      const result = await signIn('credentials', {
        email,
        redirect: false, // Não redireciona automaticamente
      });

      if (result.error) {
        setError(result.error);
      } else {
        router.push('/dashboard'); // Redireciona para o dashboard após o login bem-sucedido
      }
    } catch (error) {
      console.error('Erro ao fazer login:', error);
      setError('Ocorreu um erro ao fazer login. Tente novamente.');
    }
  };

  return (
    <div className="container mx-auto py-12">
      <h1 className="text-3xl font-bold text-center text-secondary mb-8">Login</h1>

      {error && <p className="text-red-500 text-center mb-4">{error}</p>}

      <form onSubmit={handleSubmit} className="max-w-md mx-auto space-y-4">
        <Input
          label="E-mail"
          type="email"
          value={email}
          onChange={(e) => setEmail(e.target.value)}
          required
        />
        <Button type="submit">Entrar</Button>
      </form>
    </div>
  );
};

export default LoginPage;

```
```js src\app\novasenha\page.js
'use client';

import { useState } from 'react';
import Input from '@/components/Input';
import Button from '@/components/Button';

const ForgotPasswordPage = () => {
  const [email, setEmail] = useState('');
  const [message, setMessage] = useState(null);
  const [error, setError] = useState(null);

  const handleSubmit = async (event) => {
    event.preventDefault();
    setError(null);

    try {
      const response = await fetch('/api/auth/sendPassword', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ email }),
      });

      const data = await response.json();

      if (response.ok) {
        setMessage(data.message); // Exibe mensagem de sucesso da API
      } else {
        setError(data.message); // Exibe mensagem de erro da API
      }
    } catch (error) {
      console.error('Erro ao enviar solicitação:', error);
      setError('Ocorreu um erro. Tente novamente mais tarde.');
    }
  };

  return (
    <div className="container mx-auto py-12">
      <h1 className="text-3xl font-bold text-center text-secondary mb-8">Esqueci minha senha</h1>

      {message && <p className="text-green-500 text-center mb-4">{message}</p>}
      {error && <p className="text-red-500 text-center mb-4">{error}</p>}

      <form onSubmit={handleSubmit} className="max-w-md mx-auto space-y-4">
        <Input
          label="E-mail"
          type="email"
          value={email}
          onChange={(e) => setEmail(e.target.value)}
          required
        />
        <Button type="submit">Enviar</Button>
      </form>
    </div>
  );
};

export default ForgotPasswordPage;

```
```js src\app\page.js
import React from 'react';
import Hero from '../components/Hero';
import HowItWorks from '../components/HowItWorks';
import Plans from '../components/Plans';
import FAQ from '../components/FAQ';

const HomePage = () => {
  return (
    <>
      <Hero />
      <HowItWorks />
      <Plans />
      <FAQ />
    </>
  );
};

export default HomePage;

```
```js src\app\payment\page.js
import React, { useState } from 'react';
import Plans from '../components/Plans';

const PaymentPage = () => {
  const [currentStep, setCurrentStep] = useState(1);

  const handleNextStep = () => {
    setCurrentStep(currentStep + 1);
  };

  const handlePreviousStep = () => {
    setCurrentStep(currentStep - 1);
  };

  return (
    <div className="container mx-auto py-12">
      <h1 className="text-3xl font-bold text-center text-secondary mb-8">Pagamento</h1>

      {currentStep === 1 && (
        <>
          {/* Etapa 1: Informações */}
          <Plans />
          <button className="bg-accent text-secondary font-bold py-2 px-4 rounded mt-4" onClick={handleNextStep}>
            Continuar
          </button>
        </>
      )}

      {currentStep === 2 && (
        <>
          {/* Etapa 2: Dados de Pagamento */}
          {/* ... formulário de pagamento ... */}
          <button className="bg-accent text-secondary font-bold py-2 px-4 rounded mt-4" onClick={handleNextStep}>
            Finalizar Pagamento
          </button>
          <button className="bg-gray-500 text-secondary font-bold py-2 px-4 rounded mt-4 ml-4" onClick={handlePreviousStep}>
            Voltar
          </button>
        </>
      )}

      {currentStep === 3 && (
        <>
          {/* Etapa 3: Confirmação */}
          <p className="text-center text-green-500">Pagamento realizado com sucesso!</p>
        </>
      )}
    </div>
  );
};

export default PaymentPage;

```
```js src\components\Button.js
import React from 'react';
import Link from 'next/link';

const Button = ({ children, href, className, ...props }) => {
  const buttonClasses = `
    relative z-10 inline-block
    px-6 py-3
    border border-secondary border-opacity-50 rounded-3xl
    bg-secondary bg-opacity-10
    text-secondary
    backdrop-filter backdrop-blur-lg
    outline-none cursor-pointer
    transition-all duration-300
    hover:scale-105
    ${className}
  `;

  if (href) {
    return (
      <Link href={href} className={buttonClasses} {...props}>
        {children}
      </Link>
    );
  }

  return (
    <button className={buttonClasses} {...props}>
      {children}
    </button>
  );
};

export default Button;

```
```js src\components\Contact.js
import React from 'react';

const Contact = () => {
  return (
    <div className="bg-primary py-8">
      <div className="container mx-auto">
        <h2 className="text-2xl font-semibold text-center text-secondary mb-6">Contato</h2>
        {/* Formulário de contato ou informações de contato */}
      </div>
    </div>
  );
};

export default Contact;

```
```js src\components\EmailAliasCard.js
import React from 'react';

const EmailAliasCard = ({ alias }) => {
  // Lógica para exibir as informações do alias (endereço, status, etc.)
  return (
    <div className="bg-primary bg-opacity-20 p-6 rounded-lg shadow-md">
      <h3 className="text-lg font-semibold text-secondary mb-2">{alias.name}</h3>
      {/* Outros detalhes do alias */}
      <div className="mt-4 flex justify-between">
        {/* Botões para editar, desativar/reativar, etc. */}
      </div>
    </div>
  );
};

export default EmailAliasCard;

```
```js src\components\EmailForwardingForm.js
import React, { useState } from 'react';

const EmailForwardingForm = ({ onSubmit }) => {
  const [email, setEmail] = useState('');
  const [forwardingEmail, setForwardingEmail] = useState('');

  const handleSubmit = (e) => {
    e.preventDefault();
    onSubmit({ email, forwardingEmail });
  };

  return (
    <form onSubmit={handleSubmit} className="max-w-md mx-auto mt-10 p-6 bg-white shadow-lg rounded-lg">
      <div className="mb-4">
        <label htmlFor="email" className="block text-gray-700 text-sm font-bold mb-2">Email Principal:</label>
        <input
          type="email"
          id="email"
          value={email}
          onChange={(e) => setEmail(e.target.value)}
          required
          className="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline"
        />
      </div>
      <div className="mb-4">
        <label htmlFor="forwardingEmail" className="block text-gray-700 text-sm font-bold mb-2">Nome do Email de Encaminhamento (opcional):</label>
        <input
          type="text"
          id="forwardingEmail"
          value={forwardingEmail}
          onChange={(e) => setForwardingEmail(e.target.value)}
          className="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline"
        />
      </div>
      <div className="flex items-center justify-between">
        <button
          type="submit"
          className="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline"
        >
          Gerar Email de Encaminhamento
        </button>
      </div>
    </form>
  );
};

export default EmailForwardingForm;

```
```js src\components\FAQ.js
import React from 'react';

const FAQ = () => {
  return (
    <div className="bg-primary py-8">
      <div className="container mx-auto">
        <h2 className="text-2xl font-semibold text-center text-secondary mb-6">Perguntas Frequentes</h2>
        {/* Lista de perguntas e respostas */}
      </div>
    </div>
  );
};

export default FAQ;

```
```js src\components\Footer.js
import React from 'react';
import FAQ from './FAQ';
import Contact from './Contact';

const Footer = () => {
  return (
    <footer className="bg-primary p-4">
      <div className="container mx-auto">
        <FAQ />
        <Contact />
        <p className="text-center text-gray-500 text-sm mt-4">
          &copy; {new Date().getFullYear()} EficazEmail. Todos os direitos reservados.
        </p>
      </div>
    </footer>
  );
};

export default Footer;

```
```js src\components\Form.js
import React from 'react';
import Input from './Input';
import Button from './Button';

const Form = ({ onSubmit, children, className }) => {
  return (
    <form onSubmit={onSubmit} className={`space-y-4 ${className}`}>
      {children}
      <Button type="submit">Enviar</Button>
    </form>
  );
};

export default Form;

```
```js src\components\GlassmorphismButton.js
import React from 'react';

const GlassmorphismButton = ({ children, className }) => {
  return (
    <button className={`
      relative z-10 w-48 h-16
      border border-secondary border-opacity-50 rounded-3xl
      bg-secondary bg-opacity-10
      text-gray-600 text-xl tracking-wider 
      backdrop-filter backdrop-blur-lg
      outline-none cursor-pointer 
      group
      ${className}
    `}>
      {children}
      <span className="absolute inset-0 z-[-1] w-full h-full rounded-3xl bg-accent filter blur-md transition-all duration-1000 scale-75 group-hover:scale-125"></span>
    </button>
  );
};

export default GlassmorphismButton;

```
```js src\components\Header.js
import React from 'react';
import Navigation from './Navigation';
import Link from 'next/link';

const Header = () => {
  return (
    <header className="bg-primary p-4">
      <div className="container mx-auto flex items-center justify-between">
        <Link href="/">
          <img src="/logo.png" alt="Logo" className="h-12" /> {/* Substitua '/logo.png' pelo caminho real da sua logo */}
        </Link>
        <Navigation />
      </div>
    </header>
  );
};

export default Header;

```
```js src\components\Hero.js
import React from 'react';
import GlassmorphismButton from './GlassmorphismButton';

const Hero = () => {
  return (
    <section className="bg-gradient-to-r from-primary to-blue-900 text-secondary py-20 relative overflow-hidden">
      <div className="container mx-auto text-center relative z-10">
        <h1 className="text-5xl font-bold mb-4">Proteja seu e-mail principal. Crie aliases ilimitados.</h1>
        <p className="text-xl mb-8">Mantenha seu e-mail privado e livre de spam.</p>
        <GlassmorphismButton >
          começar
        </GlassmorphismButton>
      </div>
      <div className="absolute inset-0 overflow-hidden">
        <div className="absolute top-1/2 left-0 w-full h-1 bg-gradient-to-r from-transparent via-accent to-transparent animate-slide"></div>
        <div className="absolute top-1/2 left-0 w-full h-1 bg-gradient-to-r from-transparent via-accent to-transparent opacity-50 blur-sm animate-slide"></div>
      </div>
    </section>
  );
};

export default Hero;

```
```js src\components\HowItWorks.js
import React from 'react';

const HowItWorks = () => {
  return (
    <section className="bg-secondary py-12">
      <div className="container mx-auto">
        <h2 className="text-3xl font-bold text-center text-primary mb-8">Como Funciona</h2>
        <div className="grid grid-cols-1 md:grid-cols-3 gap-8">
          {/* Passo 1 */}
          <div className="text-center">
            {/* Ícone */}
            <svg className="mx-auto mb-4" /* ... */></svg>
            <h3 className="text-xl font-semibold text-primary mb-2">Passo 1</h3>
            <p className="text-gray-700">Crie um alias de e-mail personalizado.</p>
          </div>
          {/* Passo 2 */}
          <div className="text-center">
            {/* Ícone */}
            <svg className="mx-auto mb-4" /* ... */></svg>
            <h3 className="text-xl font-semibold text-primary mb-2">Passo 2</h3>
            <p className="text-gray-700">Use o alias para se cadastrar em serviços online.</p>
          </div>
          {/* Passo 3 */}
          <div className="text-center">
            {/* Ícone */}
            <svg className="mx-auto mb-4" /* ... */></svg>
            <h3 className="text-xl font-semibold text-primary mb-2">Passo 3</h3>
            <p className="text-gray-700">Receba os e-mails no seu endereço principal.</p>
          </div>
        </div>
      </div>
    </section>
  );
};

export default HowItWorks;

```
```js src\components\Input.js
import React from 'react';

const Input = ({ label, type = 'text', ...props }) => {
  return (
    <div className="mb-4">
      <label htmlFor={props.id || props.name} className="block text-sm font-medium text-gray-700">
        {label}
      </label>
      <input
        type={type}
        className="mt-1 p-2 w-full border rounded-md bg-secondary bg-opacity-10 text-secondary focus:ring-accent focus:border-accent"
        {...props}
      />
    </div>
  );
};

export default Input;

```
```js src\components\Layout.js
import React from 'react';
import Header from '../components/Header';
import Footer from '../components/Footer';

const Layout = ({ children }) => {
  return (
    <div className="min-h-screen flex flex-col bg-primary text-secondary">
      <Header />
      <main className="flex-grow">{children}</main>
      <Footer />
    </div>
  );
};

export default Layout;

```
```js src\components\MainContent.js
import React from 'react';
import UserTable from './UserTable';

const MainContent = () => {
  return (
    <div className="flex-grow p-6 bg-gray-100">
      <UserTable />
    </div>
  );
};

export default MainContent;

```
```js src\components\MobileMenu.js
// src/components/MobileMenu.js
import React, { useState } from 'react';

const MobileMenu = () => {
  const [isOpen, setIsOpen] = useState(false);

  const toggleMenu = () => {
    setIsOpen(!isOpen);
  };

  return (
    <>
      {/* Botão do Menu Sanduíche */}
      <button
        className="block md:hidden text-white focus:outline-none"
        onClick={toggleMenu}
      >
        <svg
          className="h-6 w-6 fill-current"
          viewBox="0 0 24 24"
          xmlns="http://www.w3.org/2000/svg"
        >
          {isOpen ? (
            <path
              fillRule="evenodd"
              clipRule="evenodd"
              d="M18.278 16.864a1 1 0 0 1-1.414 1.414l-4.829-4.828-4.828 4.828a1 1 0 0 1-1.414-1.414l4.828-4.829-4.828-4.828a1 1 0 0 1 1.414-1.414l4.829 4.828 4.828-4.828a1 1 0 1 1 1.414 1.414l-4.828 4.829 4.828 4.828z"
            />
          ) : (
            <path
              fillRule="evenodd"
              d="M4 5h16a1 1 0 0 1 0 2H4a1 1 0 1 1 0-2zm0 6h16a1 1 0 0 1 0 2H4a1 1 0 0 1 0-2zm0 6h16a1 1 0 0 1 0 2H4a1 1 0 0 1 0-2z"
            />
          )}
        </svg>
      </button>

      {/* Menu Sidebar Mobile */}
      <div
        className={`fixed inset-0 z-10 bg-gray-800 text-white transition-transform duration-300 transform ${
          isOpen ? 'translate-x-0' : '-translate-x-full'
        } md:hidden`}
      >
        <div className="p-4">
          <h1 className="text-xl font-bold">Meu Dashboard</h1>
        </div>
        <nav className="mt-10">
          <a
            href="#"
            className="block py-2.5 px-4 rounded transition duration-200 hover:bg-gray-700 hover:text-white"
          >
            Dashboard
          </a>
          <a
            href="#"
            className="block py-2.5 px-4 rounded transition duration-200 hover:bg-gray-700 hover:text-white"
          >
            Equipe
          </a>
          {/* Adicione mais opções de menu aqui */}
        </nav>
      </div>
    </>
  );
};

export default MobileMenu;

```
```js src\components\Plans.js
import React from 'react';
import Button from './Button';

const Plans = () => {
  return (
    <section className="bg-secondary py-12">
      <div className="container mx-auto">
        <h2 className="text-3xl font-bold text-center text-primary mb-8">Planos</h2>
        <div className="grid grid-cols-1 md:grid-cols-2 gap-8">

          {/* Plano Gratuito */}
          <div className="bg-primary bg-opacity-20 p-6 rounded-lg shadow-md">
            <h3 className="text-xl font-semibold text-secondary mb-4">Gratuito</h3>
            <p className="text-gray-700 mb-4">Crie até 3 aliases de e-mail.</p>
            <Button>Começar Grátis</Button>
          </div>

          {/* Plano Pago */}
          <div className="bg-primary bg-opacity-20 p-6 rounded-lg shadow-md">
            <h3 className="text-xl font-semibold text-secondary mb-4">Pago</h3>
            <p className="text-gray-700 mb-4">Crie até 100 aliases de e-mail por mês.</p>
            <p className="text-gray-700 mb-4">Recursos adicionais:</p>
            <ul className="text-gray-700 list-disc list-inside mb-4">
              <li>Alterar e-mail de encaminhamento</li>
              <li>Cancelar/reativar encaminhamento</li>
            </ul>
            <Button>Assinar (R$17,90/mês)</Button>
          </div>
        </div>
      </div>
    </section>
  );
};

export default Plans;

```
```js src\components\Sidebar.js
import React, { useState } from 'react';

const Sidebar = ({ isOpen, toggleSidebar }) => {
  return (
    <div className={`bg-gray-900 text-white h-screen w-64 flex flex-col fixed md:relative z-20 transform ${isOpen ? 'translate-x-0' : '-translate-x-full'} md:translate-x-0 transition-transform duration-300`}>
      <div className="flex items-center justify-center h-16 border-b border-gray-700">
        <div className="text-xl font-semibold">Dashboard</div>
      </div>
      <div className="flex-grow">
        <nav className="flex flex-col mt-4 space-y-2">
          <a href="#" className="flex items-center px-4 py-2 text-gray-400 hover:bg-gray-700 hover:text-white">
            <span className="material-icons">home</span>
            <span className="ml-4">Dashboard</span>
          </a>
          <a href="#" className="flex items-center px-4 py-2 text-gray-400 hover:bg-gray-700 hover:text-white">
            <span className="material-icons">group</span>
            <span className="ml-4">Team</span>
          </a>
          <a href="#" className="flex items-center px-4 py-2 text-gray-400 hover:bg-gray-700 hover:text-white">
            <span className="material-icons">folder</span>
            <span className="ml-4">Projects</span>
          </a>
          <a href="#" className="flex items-center px-4 py-2 text-gray-400 hover:bg-gray-700 hover:text-white">
            <span className="material-icons">calendar_today</span>
            <span className="ml-4">Calendar</span>
          </a>
          <a href="#" className="flex items-center px-4 py-2 text-gray-400 hover:bg-gray-700 hover:text-white">
            <span className="material-icons">description</span>
            <span className="ml-4">Documents</span>
          </a>
          <a href="#" className="flex items-center px-4 py-2 text-gray-400 hover:bg-gray-700 hover:text-white">
            <span className="material-icons">bar_chart</span>
            <span className="ml-4">Reports</span>
          </a>
        </nav>
      </div>
      <div className="border-t border-gray-700">
        <div className="px-4 py-2 text-gray-400">Your teams</div>
        <nav className="flex flex-col space-y-2">
          <a href="#" className="flex items-center px-4 py-2 text-gray-400 hover:bg-gray-700 hover:text-white">
            <span className="bg-gray-600 rounded-full h-8 w-8 flex items-center justify-center text-sm">H</span>
            <span className="ml-4">Heroicons</span>
          </a>
          <a href="#" className="flex items-center px-4 py-2 text-gray-400 hover:bg-gray-700 hover:text-white">
            <span className="bg-gray-600 rounded-full h-8 w-8 flex items-center justify-center text-sm">T</span>
            <span className="ml-4">Tailwind Labs</span>
          </a>
          <a href="#" className="flex items-center px-4 py-2 text-gray-400 hover:bg-gray-700 hover:text-white">
            <span className="bg-gray-600 rounded-full h-8 w-8 flex items-center justify-center text-sm">W</span>
            <span className="ml-4">Workcation</span>
          </a>
        </nav>
      </div>
      <div className="border-t border-gray-700">
        <a href="#" className="flex items-center px-4 py-2 text-gray-400 hover:bg-gray-700 hover:text-white">
          <span className="material-icons">settings</span>
          <span className="ml-4">Settings</span>
        </a>
      </div>
    </div>
  );
};

export default Sidebar;

```
```js src\components\userDashboard.js
import React, { useState, useEffect } from 'react';
import axios from 'axios';

const UserDashboard = () => {
  const [userEmails, setUserEmails] = useState([]);
  const [newEmail, setNewEmail] = useState('');
  const [openDialog, setOpenDialog] = useState(false);

  useEffect(() => {
    const fetchUserEmails = async () => {
      try {
        const response = await axios.get('/api/emails/listaremailusuario');
        setUserEmails(response.data.data);
      } catch (error) {
        console.error('Erro ao buscar e-mails do usuário:', error);
      }
    };
    fetchUserEmails();
  }, []);

  const handleCreateEmail = async () => {
    try {
      const response = await axios.post('/api/emails/criaremail', { userEmail: 'seuEmail@gmail.com', customName: newEmail });
      setUserEmails([...userEmails, response.data.data]);
      setNewEmail('');
      setOpenDialog(false);
    } catch (error) {
      console.error('Erro ao criar novo e-mail:', error);
    }
  };

  const handleDeactivateEmail = async (email) => {
    try {
      await axios.post('/api/emails/cancelarencaminhamento', { userEmail: 'seuEmail@gmail.com', clientEmail: email });
      setUserEmails(userEmails.map(e => (e.address === email ? { ...e, status: 'inactive' } : e)));
    } catch (error) {
      console.error('Erro ao desativar e-mail:', error);
    }
  };

  const handleUpdateEmail = async (email, newForwarding) => {
    try {
      await axios.post('/api/emails/atualizarencaminhamento', { userEmail: 'seuEmail@gmail.com', clientEmail: email, forwardingEmail: newForwarding });
      setUserEmails(userEmails.map(e => (e.address === email ? { ...e, forwarding: newForwarding } : e)));
    } catch (error) {
      console.error('Erro ao atualizar e-mail:', error);
    }
  };

  const handleReactivateEmail = async (email) => {
    try {
      await axios.post('/api/emails/reativarencaminhamento', { userEmail: 'seuEmail@gmail.com', clientEmail: email });
      setUserEmails(userEmails.map(e => (e.address === email ? { ...e, status: 'active' } : e)));
    } catch (error) {
      console.error('Erro ao reativar e-mail:', error);
    }
  };

  return (
    <div className="p-8">
      <h1 className="text-2xl font-bold mb-4">Visão Geral do Usuário</h1>
      <div className="bg-white shadow rounded-lg p-6">
        <div className="flex items-center justify-between mb-6">
          <h2 className="text-xl font-bold">Seus E-mails</h2>
          <button
            className="bg-blue-500 hover:bg-blue-600 text-white font-bold py-2 px-4 rounded"
            onClick={() => setOpenDialog(true)}
          >
            Criar Novo E-mail
          </button>
        </div>
        {openDialog && (
          <div className="fixed inset-0 bg-gray-500 bg-opacity-75 flex items-center justify-center z-50">
            <div className="bg-white shadow-lg rounded-lg p-6 w-full max-w-md">
              <h3 className="text-xl font-bold mb-4">Criar Novo E-mail</h3>
              <input
                type="text"
                placeholder="Nome do E-mail"
                className="border-gray-300 rounded-md px-4 py-2 w-full mb-4"
                value={newEmail}
                onChange={(e) => setNewEmail(e.target.value)}
              />
              <div className="flex justify-end">
                <button
                  className="bg-gray-300 hover:bg-gray-400 text-gray-600 font-bold py-2 px-4 rounded mr-2"
                  onClick={() => setOpenDialog(false)}
                >
                  Cancelar
                </button>
                <button
                  className="bg-blue-500 hover:bg-blue-600 text-white font-bold py-2 px-4 rounded"
                  onClick={handleCreateEmail}
                >
                  Criar
                </button>
              </div>
            </div>
          </div>
        )}
        <div className="space-y-4">
          {userEmails.map((email) => (
            <div key={email.address} className="bg-gray-100 rounded-lg p-4">
              <h3 className="text-lg font-bold">{email.address}</h3>
              <p className="text-gray-600 mb-2">Encaminhamento: {email.forwarding}</p>
              <p className="text-gray-600 mb-4">Status: {email.status}</p>
              <div className="flex items-center space-x-2">
                <button
                  className={`px-4 py-2 rounded-md ${
                    email.status === 'inactive'
                      ? 'bg-gray-300 text-gray-600 cursor-not-allowed'
                      : 'bg-red-500 hover:bg-red-600 text-white'
                  }`}
                  onClick={() => handleDeactivateEmail(email.address)}
                  disabled={email.status === 'inactive'}
                >
                  Desativar
                </button>
                <input
                  type="text"
                  defaultValue={email.forwarding}
                  className="border-gray-300 rounded-md px-4 py-2 w-full"
                  onBlur={(e) => handleUpdateEmail(email.address, e.target.value)}
                />
                <button
                  className={`px-4 py-2 rounded-md ${
                    email.status === 'active'
                      ? 'bg-gray-300 text-gray-600 cursor-not-allowed'
                      : 'bg-blue-500 hover:bg-blue-600 text-white'
                  }`}
                  onClick={() => handleReactivateEmail(email.address)}
                  disabled={email.status === 'active'}
                >
                  Reativar
                </button>
              </div>
            </div>
          ))}
        </div>
      </div>
    </div>
  );
};

export default UserDashboard;

```
```js src\components\UserTable.js
import React from 'react';

const UserTable = () => {
  const users = [
    { name: 'Lindsay Walton', title: 'Front-end Developer', status: 'Active', role: 'Member' },
    { name: 'Jane Cooper', title: 'Regional Paradigm Technician', status: 'Inactive', role: 'Admin' },
    // Adicione mais usuários conforme necessário
  ];

  return (
    <div className="container mx-auto px-4 sm:px-8">
      <div className="py-8">
        <div className="-mx-4 sm:-mx-8 px-4 sm:px-8 py-4 overflow-x-auto">
          <div className="inline-block min-w-full shadow-md rounded-lg overflow-hidden">
            <table className="min-w-full leading-normal">
              <thead>
                <tr>
                  <th
                    scope="col"
                    className="px-5 py-3 bg-gray-800 text-left text-xs font-semibold text-gray-200 uppercase tracking-wider"
                  >
                    Name
                  </th>
                  <th
                    scope="col"
                    className="px-5 py-3 bg-gray-800 text-left text-xs font-semibold text-gray-200 uppercase tracking-wider"
                  >
                    Title
                  </th>
                  <th
                    scope="col"
                    className="px-5 py-3 bg-gray-800 text-left text-xs font-semibold text-gray-200 uppercase tracking-wider"
                  >
                    Status
                  </th>
                  <th
                    scope="col"
                    className="px-5 py-3 bg-gray-800 text-left text-xs font-semibold text-gray-200 uppercase tracking-wider"
                  >
                    Role
                  </th>
                  <th
                    scope="col"
                    className="px-5 py-3 bg-gray-800 text-center text-xs font-semibold text-gray-200 uppercase tracking-wider"
                  >
                    Actions
                  </th>
                </tr>
              </thead>
              <tbody>
                {users.map((user, index) => (
                  <tr key={index} className="border-b border-gray-200 bg-white hover:bg-gray-100">
                    <td className="px-5 py-5 text-sm">
                      <p className="text-gray-900 whitespace-no-wrap">{user.name}</p>
                    </td>
                    <td className="px-5 py-5 text-sm">
                      <p className="text-gray-900 whitespace-no-wrap">{user.title}</p>
                    </td>
                    <td className="px-5 py-5 text-sm">
                      <span
                        className={`relative inline-block px-3 py-1 font-semibold leading-tight ${
                          user.status === 'Active'
                            ? 'text-green-900'
                            : 'text-red-900'
                        }`}
                      >
                        <span
                          aria-hidden
                          className={`absolute inset-0 ${
                            user.status === 'Active'
                              ? 'bg-green-200'
                              : 'bg-red-200'
                          } opacity-50 rounded-full`}
                        ></span>
                        <span className="relative">{user.status}</span>
                      </span>
                    </td>
                    <td className="px-5 py-5 text-sm">
                      <p className="text-gray-900 whitespace-no-wrap">{user.role}</p>
                    </td>
                    <td className="px-5 py-5 text-sm text-center">
                      <button
                        type="button"
                        className="inline-block text-gray-500 hover:text-gray-700"
                      >
                        <svg
                          className="h-6 w-6 fill-current"
                          viewBox="0 0 24 24"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <path
                            d="M12 7c.552 0 1 .448 1 1v8c0 .552-.448 1-1 1s-1-.448-1-1V8c0-.552.448-1 1-1zM7 12c.552 0 1 .448 1 1v3c0 .552-.448 1-1 1s-1-.448-1-1v-3c0-.552.448-1 1-1zm10 0c.552 0 1 .448 1 1v3c0 .552-.448 1-1 1s-1-.448-1-1v-3c0-.552.448-1 1-1z"
                          />
                        </svg>
                      </button>
                    </td>
                  </tr>
                ))}
              </tbody>
            </table>
          </div>
        </div>
      </div>
    </div>
  );
};

export default UserTable;
```
```js src\pages\api\webhook.js
// pages/api/webhook.js
import { Server } from 'socket.io';
import { updatePaymentStatus, updateUserPlan } from '../../services/paymentService';

const io = require('../../../server');

export default async function handler(req, res) {
  if (req.method === 'POST') {
    const { event, charge } = req.body;

    if (event === 'OPENPIX:CHARGE_COMPLETED' && charge.status === 'COMPLETED') {
      await updatePaymentStatus(charge.transactionID, 'paid');
      
      // Emitir evento para o usuário específico
      io.sockets.sockets.forEach((socket) => {
        if (socket.userId === charge.customer.correlationID) {
          socket.emit('paymentStatus', { transactionID: charge.transactionID, status: 'paid' });
        }
      });
    }

    res.status(200).json({ message: 'Webhook recebido com sucesso' });
  } else {
    res.status(405).end(); // Method Not Allowed
  }
}

```
```js tailwind.config.js
// tailwind.config.js
/** @type {import('tailwindcss').Config} */
module.exports = {
  content: [
    './src/pages/**/*.{js,ts,jsx,tsx,mdx}',
    './src/components/**/*.{js,ts,jsx,tsx,mdx}',
    './src/app/**/*.{js,ts,jsx,tsx,mdx}',
  ],
  theme: {
    extend: {
      backgroundImage: {
        'gradient-radial': 'radial-gradient(var(--tw-gradient-stops))',
        'gradient-conic':
          'conic-gradient(from 180deg at 50% 50%, var(--tw-gradient-stops))',
      },
      colors: {
        primary: '#111827',
        
        secondary: '#FFFFFF',
        accent: '#00FFFF',
      },
      animation: {
        slide: 'slide 10s linear infinite',
      },
      keyframes: {
        slide: {
          '0%': { transform: 'translateX(100%)' },
          '100%': { transform: 'translateX(-100%)' },
        },
      },
    },
  },
  plugins: [],
}

```
