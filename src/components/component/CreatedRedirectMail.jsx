/**
* This code was generated by v0 by Vercel.
* @see https://v0.dev/t/XGlG89qjmN8
* Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
*/

/** Add fonts into your Next.js project:

import { Inter } from 'next/font/google'

inter({
  subsets: ['latin'],
  display: 'swap',
})

To read more about using these font, please visit the Next.js documentation:
- App Directory: https://nextjs.org/docs/app/building-your-application/optimizing/fonts
- Pages Directory: https://nextjs.org/docs/pages/building-your-application/optimizing/fonts
**/
import { Label } from "@/components/ui/label"
import { Input } from "@/components/ui/input"
import { Button } from "@/components/ui/button"

export function CreatedRedirectMail() {
  return (
    (<div className="max-w-md mx-auto p-6 space-y-6 border border-border rounded-lg">
      <div className="space-y-2">
        <h2 className="text-2xl font-bold">Create Email</h2>
        <p className="text-gray-400 dark:text-gray-400">Crie um email de redirecionamento personalizado.</p>
      </div>
      <form className="space-y-4">
        <div>
          <Label htmlFor="primary-email">Email principal</Label>
          <Input
            id="primary-email"
            placeholder="Informe seu email principal"
            required
            type="email" />
        </div>
        <div>
          <Label htmlFor="custom-email">Crie seu email de redirecionamento</Label>
          <div className="flex items-center space-x-2">
            <Input
              id="custom-email"
              pattern="^[a-zA-Z0-9]+$"
              placeholder="Enter a custom email prefix"
              title="Please enter a valid email prefix using only letters and numbers"
              type="text" />
            <span className="text-gray-500 dark:text-gray-400">@eficaz.email</span>
            <Button
              className="text-gray-500 hover:text-gray-900 dark:text-gray-400 dark:hover:text-gray-50"
              type="button"
              variant="ghost">
              <RefreshCwIcon className="h-5 w-5" />
              <span className="sr-only">Random</span>
            </Button>
          </div>
        </div>
        <Button className="w-full" type="submit">
          Criar redirecionamento
        </Button>
      </form>
      <div
          className="bg-gradient-to-br from-[#FF6B6B] to-[#FFD93D] rounded-xl p-6 md:p-8 flex flex-col justify-between">
          <div className="space-y-4">
            <div className="space-y-2">
              <h2 className="text-2xl font-bold tracking-tight">Digital Challenge Up</h2>
              <p className="text-gray-700 dark:text-gray-300">
                Organisateur de défis numériques et de compétitions créatives.
              </p>
            </div>
            <div className="grid gap-2">
              <div className="flex items-center gap-2">
                <MapPinIcon className="h-5 w-5 text-gray-500 dark:text-gray-400" />
                <p className="text-gray-600 dark:text-gray-400">123 Rue des Innovateurs, 75000 Paris</p>
              </div>
              <div className="flex items-center gap-2">
                <PhoneIcon className="h-5 w-5 text-gray-500 dark:text-gray-400" />
                <p className="text-gray-600 dark:text-gray-400">+33 1 23 45 67 89</p>
              </div>
              <div className="flex items-center gap-2">
                <MailIcon className="h-5 w-5 text-gray-500 dark:text-gray-400" />
                <p className="text-gray-600 dark:text-gray-400">contact@digitalchallengeup.com</p>
              </div>
            </div>
          </div>
          <div className="relative">
            <div
              className="absolute -top-8 -right-8 w-32 h-32 bg-[#FFD93D] rounded-full blur-[100px]" />
            <div
              className="absolute -bottom-8 -left-8 w-32 h-32 bg-[#FF6B6B] rounded-full blur-[100px]" />
            <div
              className="relative z-10 bg-white dark:bg-gray-950 rounded-xl p-6 md:p-8 shadow-lg">
              <div className="flex items-center gap-4">
                <div
                  className="w-12 h-12 bg-[#FF6B6B] rounded-full flex items-center justify-center">
                  <BriefcaseIcon className="h-6 w-6 text-white" />
                </div>
                <div>
                  <h3 className="text-lg font-bold">Partenariat</h3>
                  <p className="text-gray-600 dark:text-gray-400">Intéressé pour collaborer avec nous ?</p>
                </div>
              </div>
              <Button className="mt-4 w-full" variant="ghost">
                Contactez-nous
              </Button>
            </div>
          </div>
        </div>
    </div>
    
  )
  );
}

function RefreshCwIcon(props) {
  return (
    (<svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round">
      <path d="M3 12a9 9 0 0 1 9-9 9.75 9.75 0 0 1 6.74 2.74L21 8" />
      <path d="M21 3v5h-5" />
      <path d="M21 12a9 9 0 0 1-9 9 9.75 9.75 0 0 1-6.74-2.74L3 16" />
      <path d="M8 16H3v5" />
    </svg>)
  );
}
function BriefcaseIcon(props) {
  return (
    (<svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round">
      <path d="M16 20V4a2 2 0 0 0-2-2h-4a2 2 0 0 0-2 2v16" />
      <rect width="20" height="14" x="2" y="6" rx="2" />
    </svg>)
  );
}


function MailIcon(props) {
  return (
    (<svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round">
      <rect width="20" height="16" x="2" y="4" rx="2" />
      <path d="m22 7-8.97 5.7a1.94 1.94 0 0 1-2.06 0L2 7" />
    </svg>)
  );
}


function MapPinIcon(props) {
  return (
    (<svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round">
      <path d="M20 10c0 6-8 12-8 12s-8-6-8-12a8 8 0 0 1 16 0Z" />
      <circle cx="12" cy="10" r="3" />
    </svg>)
  );
}


function PhoneIcon(props) {
  return (
    (<svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round">
      <path
        d="M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z" />
    </svg>)
  );
}